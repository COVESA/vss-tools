type Query {
  vehicle: Vehicle
}

scalar Int8

scalar UInt8

scalar Int16

scalar UInt16

scalar UInt32

scalar Int64

scalar UInt64

"""High-level vehicle data."""
type Vehicle {
  id: ID!
  cabin: Vehicle_Cabin
}

"""All in-cabin components, including doors."""
type Vehicle_Cabin {
  door_s: [Vehicle_Cabin_Door]
}

"""All doors, including windows and switches."""
type Vehicle_Cabin_Door {
  id: ID!
  instanceLabel: String

  """
  Is door child lock active. True = Door cannot be opened from inside. False = Door can be opened from inside.
  """
  isChildLockActive: Boolean

  """Is item locked or unlocked. True = Locked. False = Unlocked."""
  isLocked: Boolean

  """
  Is item open or closed? True = Fully or partially open. False = Fully closed.
  """
  isOpen: Boolean

  """
  Item position. 0 = Start position 100 = End position.
  @comment: Relationship between Open/Close and Start/End position is item dependent.
  @max: 100
  """
  position(unit: Relation_Unit_Enum = PERCENT): UInt8

  """Switch controlling sliding action such as window, sunroof, or blind."""
  switch: Vehicle_Cabin_Door_Switch_Enum
  shade: Vehicle_Cabin_Door_Shade
  window: Vehicle_Cabin_Door_Window
}

"""
Side window shade. Open = Retracted, Closed = Deployed. Start position for Shade is Open/Retracted.
"""
type Vehicle_Cabin_Door_Shade {
  """
  Is item open or closed? True = Fully or partially open. False = Fully closed.
  """
  isOpen: Boolean

  """
  Item position. 0 = Start position 100 = End position.
  @comment: Relationship between Open/Close and Start/End position is item dependent.
  @max: 100
  """
  position(unit: Relation_Unit_Enum = PERCENT): UInt8

  """Switch controlling sliding action such as window, sunroof, or blind."""
  switch: Vehicle_Cabin_Door_Shade_Switch_Enum
}

"""Door window status. Start position for Window is Closed."""
type Vehicle_Cabin_Door_Window {
  """
  Is item open or closed? True = Fully or partially open. False = Fully closed.
  """
  isOpen: Boolean

  """
  Item position. 0 = Start position 100 = End position.
  @comment: Relationship between Open/Close and Start/End position is item dependent.
  @max: 100
  """
  position(unit: Relation_Unit_Enum = PERCENT): UInt8

  """Switch controlling sliding action such as window, sunroof, or blind."""
  switch: Vehicle_Cabin_Door_Window_Switch_Enum
}

enum Vehicle_Cabin_Door_Shade_Switch_Enum {
  INACTIVE
  CLOSE
  OPEN
  ONE_SHOT_CLOSE
  ONE_SHOT_OPEN
}

enum Vehicle_Cabin_Door_Switch_Enum {
  INACTIVE
  CLOSE
  OPEN
  ONE_SHOT_CLOSE
  ONE_SHOT_OPEN
}

enum Vehicle_Cabin_Door_Window_Switch_Enum {
  INACTIVE
  CLOSE
  OPEN
  ONE_SHOT_CLOSE
  ONE_SHOT_OPEN
}

enum Acceleration_Unit_Enum {
  CENTIMETERS_PER_SECOND_SQUARED
  METERS_PER_SECOND_SQUARED
}

enum Angle_Unit_Enum {
  DEGREE
}

enum Angularspeed_Unit_Enum {
  DEGREE_PER_SECOND
  RADIANS_PER_SECOND
}

enum Datetime_Unit_Enum {
  ISO_8601
  UNIX_TIMESTAMP
}

enum Distancepervolume_Unit_Enum {
  KILOMETERS_PER_LITER
  MILES_PER_GALLON
}

enum Duration_Unit_Enum {
  DAYS
  HOUR
  MILLISECOND
  MINUTE
  MONTHS
  SECOND
  WEEKS
  YEARS
}

enum Electriccharge_Unit_Enum {
  AMPERE_HOURS
}

enum Electriccurrent_Unit_Enum {
  AMPERE
}

enum Energyconsumptionperdistance_Unit_Enum {
  KILOWATT_HOURS_PER_100_KILOMETERS
  WATT_HOUR_PER_KM
}

enum Force_Unit_Enum {
  KILO_NEWTON
  NEWTON
}

enum Frequency_Unit_Enum {
  BEATS_PER_MINUTE
  CYCLES_PER_MINUTE
  HERTZ
}

enum Illuminance_Unit_Enum {
  LUX
}

enum Length_Unit_Enum {
  CENTIMETER
  INCH
  KILOMETER
  METER
  MILLIMETER
}

enum Mass_Unit_Enum {
  GRAM
  KILOGRAM
  POUND
}

enum Massperdistance_Unit_Enum {
  GRAMS_PER_KILOMETER
}

enum Masspertime_Unit_Enum {
  GRAMS_PER_SECOND
}

enum Power_Unit_Enum {
  HORSEPOWER
  KILOWATT
  WATT
}

enum Pressure_Unit_Enum {
  KILOPASCAL
  MILLIBAR
  PASCAL
  POUNDS_PER_SQUARE_INCH
}

enum Rating_Unit_Enum {
  STARS
}

enum Relation_Unit_Enum {
  DECIBEL
  DECIBEL_MILLIWATT
  NANO_METER_PER_KILOMETER
  PERCENT
  RATIO
}

enum Resistance_Unit_Enum {
  OHM
}

enum Rotationalspeed_Unit_Enum {
  REVOLUTIONS_PER_MINUTE
}

enum Temperature_Unit_Enum {
  DEGREE_CELSIUS
}

enum Torque_Unit_Enum {
  NEWTON_METER
}

enum Velocity_Unit_Enum {
  KILOMETER_PER_HOUR
  METERS_PER_SECOND
}

enum Voltage_Unit_Enum {
  VOLT
}

enum Volume_Unit_Enum {
  CUBIC_CENTIMETERS
  LITER
  MILLILITER
}

enum Volumeflowrate_Unit_Enum {
  LITER_PER_HOUR
}

enum Volumeperdistance_Unit_Enum {
  LITER_PER_100_KILOMETERS
  MILLILITER_PER_100_KILOMETERS
}

enum Work_Unit_Enum {
  KILOWATT_HOURS
}

"""
Specified reference instance names (informative only) for the type Vehicle_Cabin_Door.
"""
enum Vehicle_Cabin_Door_Instance_Enum {
  ROW1_DRIVERSIDE
  ROW1_PASSENGERSIDE
  ROW2_DRIVERSIDE
  ROW2_PASSENGERSIDE
}
