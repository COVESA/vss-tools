{"A": {"children": {"B": {"children": {"Int32": {"datatype": "int32", "description": "A.B.Int32 is a leaf of A.B of datatype int32", "type": "sensor", "unit": "rpm"}, "IsLeaf": {"allowed": ["YES", "NO"], "datatype": "string", "description": "This node is a leaf of the tree and it has allowed values (aka an enum).", "type": "actuator"}, "Max": {"datatype": "uint8", "description": "A leaf that uses a maximum value.", "max": 100, "min": 0, "type": "sensor", "unit": "percent"}, "Min": {"datatype": "uint8", "description": "A leaf that uses a minimum value.", "min": 10, "type": "sensor", "unit": "percent"}, "NewName": {"datatype": "uint32", "description": "A.B.NewName's old name is 'OldName'. And its even older name is 'OlderName'.", "type": "sensor", "unit": "mm"}}, "description": "B is a branch of A", "type": "branch"}, "Float": {"datatype": "float", "description": "A.Float is a leaf of A of datatype float", "type": "actuator", "unit": "mm"}, "Int16": {"datatype": "int16", "description": "A.Int16 is a leaf of A of datatype int16", "type": "sensor", "unit": "rpm"}, "String": {"datatype": "string", "deprecation": "This is test deprecation, let's say it used to be called Str instead String.", "description": "A.String is a leaf of A of datatype string", "type": "sensor"}, "StringArray": {"datatype": "string[]", "description": "A.StringArray is a leaf of A of datatype string array", "type": "sensor"}}, "description": "A is a test node", "type": "branch"}}