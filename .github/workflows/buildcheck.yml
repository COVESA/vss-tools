name: Standard Build Check

on: [push, pull_request]

jobs:
  buildtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install pyenv
        run: |
          # Needed for using exact python version, which is
          # required in `Pipfile`.
          curl https://pyenv.run | bash
          export PATH="$HOME/.pyenv/bin:$PATH"
          pyenv install 3.8.12
      - name: Install dependencies
        run: |
          python -V
          python -m pip --quiet --no-input install --upgrade pip 
          python -m pip --quiet --no-input install --upgrade pipenv wheel
          pipenv install
          pipenv run python setup.py -q install
        env:
          PIPENV_VENV_IN_PROJECT: 1

      - name: Prepare vss-tools inside VSS
        run: |
          # Go up to parent dir and fetch VSS (master branch) there
          cd ..
          git clone https://github.com/GENIVI/vehicle_signal_specification

          # In the parent dir we should find our dir, i.e. vss-tools with
          # the version that is being tested now.  Put that inside of VSS
          # dir where it is expected to be.
          # (Later jobs fail if we remove the working dir entirely, so copy instead of move)
          rm -rf vehicle_signal_specification/vss-tools
          cp -a vss-tools vehicle_signal_specification/

      - name: Test mandatory targets
        run: |
          # "Our" version of vss-tools was prepared inside VSS => go there and run tests
          cd ../vehicle_signal_specification
          pipenv install
          pipenv run make travis_targets
        env:
          PIPENV_PIPFILE: ./vss-tools/Pipfile
          PIPENV_VENV_IN_PROJECT: 1
      - name: Test optional targets. NOTE - always succeeds
        run: |
          cd ../vehicle_signal_specification
          pipenv install
          pipenv run make -k travis_optional || true
        env:
          PIPENV_PIPFILE: ./vss-tools/Pipfile
          PIPENV_VENV_IN_PROJECT: 1
